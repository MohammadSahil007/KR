{"ast":null,"code":"var _jsxFileName = \"E:\\\\Final Web\\\\MSP\\\\KR X MSP\\\\src\\\\components\\\\Carousel.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// const Carousel = () => {\n//   const images = [\n//     'img/about/c1.jpg', // Replace with your image URLs\n//     'img/about/c2.jpg',\n//     'img/about/c3.jpg',\n//   ];\n\n//   const [currentIndex, setCurrentIndex] = useState(0);\n\n//   useEffect(() => {\n//     const interval = setInterval(() => {\n//       setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\n//     }, 3000); // Change image every 3 seconds\n\n//     return () => clearInterval(interval); // Cleanup interval on component unmount\n//   }, [images.length]);\n\n//   return (\n//     <div style={{}} style={styles.carouselContainer}>\n//       <img src={images[currentIndex]} alt=\"carousel\" style={styles.image} />\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   carouselContainer: {\n//     width: '100%',\n//     opc\n//     opacity:'0.2',\n//     height: '100%', // Set the height you want for your carousel\n//     overflow: 'hidden',\n//     position: 'relative',\n//   },\n//   image: {\n//     width: '100%',\n//     height: '100%',\n//     objectFit: 'cover',\n//     transition: 'opacity 1s ease-in-out',\n//   },\n// };\n\n// export default Carousel;\nimport React, { useState, useEffect } from 'react';\nimport './cImg.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Carousel = () => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const images = [{\n    src: 'img.about/c1.jpg',\n    caption: 'Caption 1',\n    paragraph: 'This is the first image description.'\n  }, {\n    src: 'img/about/c2.jpg',\n    caption: 'Caption 2',\n    paragraph: 'This is the second image description.'\n  }, {\n    src: 'img/about/c3.jpg',\n    caption: 'Caption 3',\n    paragraph: 'This is the third image description.'\n  }];\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentIndex(prevIndex => (prevIndex + 1) % images.length);\n    }, 3000); // Change image every 3 seconds\n\n    return () => clearInterval(interval); // Clean up the interval on component unmount\n  }, [images.length]);\n  const handlePrev = () => {\n    setCurrentIndex(prevIndex => (prevIndex - 1 + images.length) % images.length);\n  };\n  const handleNext = () => {\n    setCurrentIndex(prevIndex => (prevIndex + 1) % images.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-inner\",\n      children: images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `carousel-item ${index === currentIndex ? 'active' : ''}`,\n        style: {\n          backgroundImage: `url(${image.src})`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carousel-caption\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: image.caption\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: image.paragraph\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"carousel-control-prev\",\n      onClick: handlePrev,\n      children: \"\\u2039\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"carousel-control-next\",\n      onClick: handleNext,\n      children: \"\\u203A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel, \"tPjzCc9H5UuFdWNuAHYoD0K4UOk=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useState","useEffect","Carousel","currentIndex","setCurrentIndex","images","src","caption","paragraph","interval","setInterval","prevIndex","length","clearInterval","handlePrev","handleNext","map","image","index","backgroundImage"],"sources":["E:/Final Web/MSP/KR X MSP/src/components/Carousel.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// const Carousel = () => {\r\n//   const images = [\r\n//     'img/about/c1.jpg', // Replace with your image URLs\r\n//     'img/about/c2.jpg',\r\n//     'img/about/c3.jpg',\r\n//   ];\r\n\r\n//   const [currentIndex, setCurrentIndex] = useState(0);\r\n\r\n//   useEffect(() => {\r\n//     const interval = setInterval(() => {\r\n//       setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n//     }, 3000); // Change image every 3 seconds\r\n\r\n//     return () => clearInterval(interval); // Cleanup interval on component unmount\r\n//   }, [images.length]);\r\n\r\n//   return (\r\n//     <div style={{}} style={styles.carouselContainer}>\r\n//       <img src={images[currentIndex]} alt=\"carousel\" style={styles.image} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const styles = {\r\n//   carouselContainer: {\r\n//     width: '100%',\r\n//     opc\r\n//     opacity:'0.2',\r\n//     height: '100%', // Set the height you want for your carousel\r\n//     overflow: 'hidden',\r\n//     position: 'relative',\r\n//   },\r\n//   image: {\r\n//     width: '100%',\r\n//     height: '100%',\r\n//     objectFit: 'cover',\r\n//     transition: 'opacity 1s ease-in-out',\r\n//   },\r\n// };\r\n\r\n// export default Carousel;\r\nimport React, { useState, useEffect } from 'react';\r\nimport './cImg.css'\r\nconst Carousel = () => {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const images = [\r\n    {\r\n      src: 'img.about/c1.jpg',\r\n      caption: 'Caption 1',\r\n      paragraph: 'This is the first image description.',\r\n    },\r\n    {\r\n      src: 'img/about/c2.jpg',\r\n      caption: 'Caption 2',\r\n      paragraph: 'This is the second image description.',\r\n    },\r\n    {\r\n      src: 'img/about/c3.jpg',\r\n      caption: 'Caption 3',\r\n      paragraph: 'This is the third image description.',\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n    }, 3000); // Change image every 3 seconds\r\n\r\n    return () => clearInterval(interval); // Clean up the interval on component unmount\r\n  }, [images.length]);\r\n\r\n  const handlePrev = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex - 1 + images.length) % images.length);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n  };\r\n\r\n  return (\r\n    <div className=\"carousel\">\r\n      <div className=\"carousel-inner\">\r\n        {images.map((image, index) => (\r\n          <div\r\n            key={index}\r\n            className={`carousel-item ${index === currentIndex ? 'active' : ''}`}\r\n            style={{ backgroundImage: `url(${image.src})` }}\r\n          >\r\n            <div className=\"carousel-caption\">\r\n              <h3>{image.caption}</h3>\r\n              <p>{image.paragraph}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <button className=\"carousel-control-prev\" onClick={handlePrev}>\r\n        ‹\r\n      </button>\r\n      <button className=\"carousel-control-next\" onClick={handleNext}>\r\n        ›\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,YAAY;AAAA;AACnB,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAMK,MAAM,GAAG,CACb;IACEC,GAAG,EAAE,kBAAkB;IACvBC,OAAO,EAAE,WAAW;IACpBC,SAAS,EAAE;EACb,CAAC,EACD;IACEF,GAAG,EAAE,kBAAkB;IACvBC,OAAO,EAAE,WAAW;IACpBC,SAAS,EAAE;EACb,CAAC,EACD;IACEF,GAAG,EAAE,kBAAkB;IACvBC,OAAO,EAAE,WAAW;IACpBC,SAAS,EAAE;EACb,CAAC,CACF;EAEDP,SAAS,CAAC,MAAM;IACd,MAAMQ,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCN,eAAe,CAAEO,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIN,MAAM,CAACO,MAAM,CAAC;IACjE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMC,aAAa,CAACJ,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,CAACJ,MAAM,CAACO,MAAM,CAAC,CAAC;EAEnB,MAAME,UAAU,GAAG,MAAM;IACvBV,eAAe,CAAEO,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,GAAGN,MAAM,CAACO,MAAM,IAAIP,MAAM,CAACO,MAAM,CAAC;EACjF,CAAC;EAED,MAAMG,UAAU,GAAG,MAAM;IACvBX,eAAe,CAAEO,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIN,MAAM,CAACO,MAAM,CAAC;EACjE,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,wBACvB;MAAK,SAAS,EAAC,gBAAgB;MAAA,UAC5BP,MAAM,CAACW,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvB;QAEE,SAAS,EAAG,iBAAgBA,KAAK,KAAKf,YAAY,GAAG,QAAQ,GAAG,EAAG,EAAE;QACrE,KAAK,EAAE;UAAEgB,eAAe,EAAG,OAAMF,KAAK,CAACX,GAAI;QAAG,CAAE;QAAA,uBAEhD;UAAK,SAAS,EAAC,kBAAkB;UAAA,wBAC/B;YAAA,UAAKW,KAAK,CAACV;UAAO;YAAA;YAAA;YAAA;UAAA,QAAM,eACxB;YAAA,UAAIU,KAAK,CAACT;UAAS;YAAA;YAAA;YAAA;UAAA,QAAK;QAAA;UAAA;UAAA;UAAA;QAAA;MACpB,GAPDU,KAAK;QAAA;QAAA;QAAA;MAAA,QASb;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAQ,SAAS,EAAC,uBAAuB;MAAC,OAAO,EAAEJ,UAAW;MAAA,UAAC;IAE/D;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAQ,SAAS,EAAC,uBAAuB;MAAC,OAAO,EAAEC,UAAW;MAAA,UAAC;IAE/D;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,GA5DIb,QAAQ;AAAA,KAARA,QAAQ;AA8Dd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}